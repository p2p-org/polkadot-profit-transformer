version: '3'

networks:
  default:
    external:
      name: streamer_network

services:
  mbelt_db:
    container_name: mbelt_postgres
    build: './db'
    restart: always
    hostname: mbelt_postgres
    ports:
      - 5432:5432
    env_file:
      - docker/env/.postgres.env
    volumes:
      - ./db-data:/var/lib/postgresql/data

  mbelt_redis:
    container_name: mbelt_redis
    image: redis:latest
    hostname: mbelt_redis
    ports:
      - '6379:6379'
    restart: always


  mbelt_rabbitmq:
    container_name: mbelt_rabbitmq
    image: rabbitmq:3-management-alpine
    hostname: mbelt_rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: username
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq



#  hasura:
#    image: hasura/graphql-engine:v2.0.9.cli-migrations-v3
#    ports:
#      - '8081:8080'
#    depends_on:
#      - 'db'
#    restart: always
#    env_file:
#      - docker/env/.hasura.env
#    volumes:
#      - ./hasura:/hasura-metadata

  mbelt_listener:
    container_name: mbelt_listener
    build:
      context: ./main
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - mbelt_db
    volumes:
      - ./main:/usr/src/app
      - ./main/.env_listener:/usr/src/app/.env

  mbelt_block_processor:
    container_name: mbelt_block_processor
    build:
      context: ./main
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3001:3001
    depends_on:
      - mbelt_db
    volumes:
      - ./main:/usr/src/app
      - ./main/.env_block_processor:/usr/src/app/.env

  mbelt_staking_processor:
    container_name: mbelt_staking_processor
    build:
      context: ./main
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3002:3002
    depends_on:
      - mbelt_db
    volumes:
      - ./main:/usr/src/app
      - ./main/.env_staking_processor:/usr/src/app/.env

       
